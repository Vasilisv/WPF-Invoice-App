<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:chart="http://schemas.syncfusion.com/wpf" x:Class="WpfApp1.Payments_Management"
        WindowState="Maximized"
        mc:Ignorable="d"
        Title="Payments_Management" Height="1305.399" Width="1894.201">
    <Grid>
        <Menu  HorizontalAlignment="Left" VerticalAlignment="Top" Height="24" Width="1888" RenderTransformOrigin="5.436,2.109" Background="#FFF3600E" FontSize="13">
            <MenuItem  Header="Δημιουργία" Background="#FFF3600E" Foreground="White">
                <MenuItem Header="_Δημιουργία Νέου Τιμολογίου" Background="#FFF3600E" Click="createinvoice_Click"></MenuItem>
                <MenuItem Header="_Δημιουργία Νέου Δελτίου Αποστολής" Background="#FFF3600E" Click="deliverynote_Click"></MenuItem>
                <MenuItem Header="_Δημιουργία Νέου Tιμολογίου-Δελτίου Αποστολής" Background="#FFF3600E" Click="DNInvoice_Click"></MenuItem>
                <MenuItem Header="_Exit" Background="#FFF3600E" Click="Exit_Click" />
            </MenuItem>
            <MenuItem Header="Πελατολόγιο" Foreground="White">
                <MenuItem Header="Εγγραφή Νέου Πελάτη" Background="#FFF3600E" Click="AddNewClient_Click" IsCheckable="False"  />
            </MenuItem>
            <MenuItem Header="Προιόντα" Foreground="White">
                <MenuItem Header="Προσθήκη Νέου Προιόντος" Background="#FFF3600E" Click="AddNewProduct_Click" IsCheckable="False"  />
            </MenuItem>
            <MenuItem  Header="Παραστατικά" Foreground="White">
                <MenuItem Header="_Διαχείριση Τιμολογίων" Background="#FFF3600E" Click="InvoiceManagement_Click"></MenuItem>
                <MenuItem Header="_Διαχείριση Πληρωμών" Background="#FFF3600E" Click="PaymentsManagement_Click"></MenuItem>
                <MenuItem Header="_Exit" Click="Exit_Click" Background="#FFF3600E" />
            </MenuItem>
            <MenuItem Header="Ρυθμίσεις" Click="Settings_Click" Foreground="White">
            </MenuItem>
        </Menu>

        <chart:SfDataGrid x:Name="dg" SelectionMode="Multiple"  HorizontalAlignment="Left" Height="734" Margin="67,39,0,0" VerticalAlignment="Top" Width="498" SelectionChanged="dg_SelectionChanged"/>
        <Label x:Name="nameLbl" Content="ΟΝΟΜΑΤΕΠΩΝΥΜΟ:" HorizontalAlignment="Left" Margin="822,99,0,1147"/>
        <Label x:Name="newblLbl" Content="ΝΕΟ ΥΠΟΛΟΙΠΟ:" HorizontalAlignment="Left" Margin="822,134,0,1115"/>
        <TextBox x:Name="nameField" HorizontalAlignment="Left" Height="24"  TextWrapping="Wrap" Text="&#xA;" VerticalAlignment="Top" Width="319" Margin="960,99,0,0" Grid.Row="1"/>
        <TextBox x:Name="updatedBalanceField" HorizontalAlignment="Left" Height="24" Margin="960,137,0,0" TextWrapping="Wrap" Text="&#xA;" VerticalAlignment="Top" Width="319" Grid.Row="2"/>

        <Button x:Name="updateBalanceBtn" Content="ΑΛΛΑΓΗ ΥΠΟΛΟΙΠΟΥ" HorizontalAlignment="Left" Margin="1030,214,0,0" VerticalAlignment="Top" Width="168" Height="46" RenderTransformOrigin="0.523,0.46" Click="UpdateBalance_Click" Foreground="White" BorderBrush="#FFF3600E" Background="#FFF3600E" FontSize="16" IsDefault="True" BorderThickness="0" Style="{DynamicResource ButtonStyle}">
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF0E2E40"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF0E2E40"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF7C3500"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF0E2E40"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">

                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation To="#FF0E2E40"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>

                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
       
    </Grid>
</Window>
